version: "3.8"

services:
  auto-feedback:
    image: ghcr.io/kaushik1919/auto-feedback:latest
    container_name: auto-feedback-app
    restart: unless-stopped

    # Port mappings
    ports:
      - "${FLASK_PORT:-5000}:5000"
      - "${STREAMLIT_PORT:-8501}:8501"

    # Environment variables
    environment:
      - FLASK_HOST=0.0.0.0
      - FLASK_PORT=5000
      - FLASK_DEBUG=${FLASK_DEBUG:-false}
      - STREAMLIT_HOST=0.0.0.0
      - STREAMLIT_PORT=8501
      - API_URL=http://localhost:5000
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1

    # Health check configuration
    healthcheck:
      test: |
        curl -f http://localhost:5000/health &&
        curl -f http://localhost:8501/_stcore/health
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

    # Resource limits
    deploy:
      resources:
        limits:
          cpus: "1.0"
          memory: 2G
        reservations:
          cpus: "0.25"
          memory: 512M

    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

    # Volume mounts for persistence (optional)
    volumes:
      - app-data:/app/data
      - app-logs:/var/log/supervisor

    # Labels for management
    labels:
      - "com.auto-feedback.service=main"
      - "com.auto-feedback.version=1.0.0"
      - "traefik.enable=false" # Disable if using Traefik

    # Networks
    networks:
      - auto-feedback-network

# Alternative multi-service setup (commented out - use if you want to separate services)
#
#   flask-api:
#     image: ghcr.io/kaushik1919/auto-feedback:latest
#     container_name: auto-feedback-api
#     restart: unless-stopped
#     command: python app/main.py
#
#     ports:
#       - "${FLASK_PORT:-5000}:5000"
#
#     environment:
#       - FLASK_HOST=0.0.0.0
#       - FLASK_PORT=5000
#       - FLASK_DEBUG=${FLASK_DEBUG:-false}
#       - PYTHONUNBUFFERED=1
#
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 20s
#
#     deploy:
#       resources:
#         limits:
#           cpus: '0.5'
#           memory: 1G
#         reservations:
#           cpus: '0.1'
#           memory: 256M
#
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"
#
#     volumes:
#       - api-data:/app/data
#
#     networks:
#       - auto-feedback-network
#
#   streamlit-dashboard:
#     image: ghcr.io/kaushik1919/auto-feedback:latest
#     container_name: auto-feedback-dashboard
#     restart: unless-stopped
#     command: streamlit run app/dashboard.py --server.port=8501 --server.address=0.0.0.0 --server.headless=true --browser.gatherUsageStats=false
#
#     ports:
#       - "${STREAMLIT_PORT:-8501}:8501"
#
#     environment:
#       - API_URL=http://flask-api:5000
#       - PYTHONUNBUFFERED=1
#
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
#       interval: 30s
#       timeout: 10s
#       retries: 3
#       start_period: 30s
#
#     deploy:
#       resources:
#         limits:
#           cpus: '0.5'
#           memory: 1G
#         reservations:
#           cpus: '0.1'
#           memory: 256M
#
#     logging:
#       driver: "json-file"
#       options:
#         max-size: "10m"
#         max-file: "3"
#
#     depends_on:
#       flask-api:
#         condition: service_healthy
#
#     networks:
#       - auto-feedback-network

# Named volumes for data persistence
volumes:
  app-data:
    driver: local
    labels:
      - "com.auto-feedback.volume=data"
  app-logs:
    driver: local
    labels:
      - "com.auto-feedback.volume=logs"

# Networks
networks:
  auto-feedback-network:
    driver: bridge
    labels:
      - "com.auto-feedback.network=main"
